{"version":3,"sources":["pages/auth/ForgotPassword.js"],"names":["ForgotPassword","history","useState","email","setEmail","loading","setLoading","user","useSelector","state","useEffect","token","push","handleSubmit","e","a","preventDefault","config","url","process","handleCodeInApp","auth","sendPasswordResetEmail","then","toast","success","catch","error","message","console","log","className","onSubmit","type","value","onChange","target","placeholder","autoFocus","disabled"],"mappings":"0MAgEeA,UA3DQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACZC,mBAAS,IADG,mBAC/BC,EAD+B,KACxBC,EADwB,OAERF,oBAAS,GAFD,mBAE/BG,EAF+B,KAEtBC,EAFsB,KAI9BC,EAASC,aAAY,SAACC,GAAD,sBAAiBA,MAAtCF,KAERG,qBAAU,WACJH,GAAQA,EAAKI,OAAOV,EAAQW,KAAK,OACpC,CAACL,EAAMN,IAEV,IAAMY,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DACnBD,EAAEE,iBACFV,GAAW,GAELW,EAAS,CACbC,IAAKC,yCACLC,iBAAiB,GANA,SASbC,IACHC,uBAAuBnB,EAAOc,GAC9BM,MAAK,WACJnB,EAAS,IACTE,GAAW,GACXkB,IAAMC,QAAQ,+CAEfC,OAAM,SAACC,GACNrB,GAAW,GACXkB,IAAMG,MAAMA,EAAMC,SAClBC,QAAQC,IAAI,+BAAgCH,MAnB7B,2CAAH,sDAuBlB,OACE,yBAAKI,UAAU,sCACZ1B,EACC,wBAAI0B,UAAU,eAAc,WAE5B,4BAAI,mBAGN,0BAAMC,SAAUnB,GACd,2BACEoB,KAAK,QACLF,UAAU,eACVG,MAAO/B,EACPgC,SAAU,SAACrB,GAAD,OAAOV,EAASU,EAAEsB,OAAOF,QACnCG,YAAY,kBACZC,WAAS,IAEX,6BACA,4BAAQP,UAAU,iBAAiBQ,UAAWpC,GAAO","file":"static/js/42.ba958498.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { auth } from \"../../firebase\";\nimport { toast } from \"react-toastify\";\nimport { useSelector } from \"react-redux\";\n\nconst ForgotPassword = ({ history }) => {\n  const [email, setEmail] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const { user } = useSelector((state) => ({ ...state }));\n\n  useEffect(() => {\n    if (user && user.token) history.push(\"/\");\n  }, [user, history]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    const config = {\n      url: process.env.REACT_APP_FORGOT_PASSWORD_REDIRECT,\n      handleCodeInApp: true,\n    };\n\n    await auth\n      .sendPasswordResetEmail(email, config)\n      .then(() => {\n        setEmail(\"\");\n        setLoading(false);\n        toast.success(\"Check your email for password reset link\");\n      })\n      .catch((error) => {\n        setLoading(false);\n        toast.error(error.message);\n        console.log(\"ERROR MSG IN FORGOT PASSWORD\", error);\n      });\n  };\n\n  return (\n    <div className=\"container col-md-6 offset-md-3 p-5\">\n      {loading ? (\n        <h4 className=\"text-danger\">Loading</h4>\n      ) : (\n        <h4>Forgot Password</h4>\n      )}\n\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"email\"\n          className=\"form-control\"\n          value={email}\n          onChange={(e) => setEmail(e.target.value)}\n          placeholder=\"Type your email\"\n          autoFocus\n        />\n        <br />\n        <button className=\"btn btn-raised\" disabled={!email}>\n          Submit\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n"],"sourceRoot":""}