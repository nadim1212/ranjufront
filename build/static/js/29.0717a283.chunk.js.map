{"version":3,"sources":["components/order/Invoice.js","pages/user/History.js","functions/user.js","components/nav/UserNav.js","components/cards/ShowPaymentInfo.js"],"names":["styles","StyleSheet","create","body","paddingTop","paddingBottom","paddingHorizontal","title","fontSize","textAlign","author","marginBottom","subtitle","margin","text","image","marginVertical","marginHorizontal","header","color","footer","padding","pageNumber","position","bottom","left","right","Invoice","order","style","fixed","Date","toLocaleString","data","products","getContent","x","product","price","count","brand","paymentIntent","created","id","orderStatus","amount","History","useState","orders","setOrders","user","useSelector","state","useEffect","loadUserOrders","getUserOrders","token","then","res","console","log","JSON","stringify","className","UserNav","length","reverse","map","i","key","ShowPaymentInfo","scope","p","shipping","CheckCircleOutlined","CloseCircleOutlined","showOrderInTable","document","fileName","showDownloadLink","userCart","cart","authtoken","a","axios","post","process","headers","getUserCart","get","emptyUserCart","delete","saveUserAddress","address","applyCoupon","coupon","createOrder","stripeResponse","getWishlist","removeWishlist","productId","put","addToWishlist","createCashOrderForUser","COD","couponTrueOrFalse","couponApplied","to","showStatus","currency","toUpperCase","payment_method_types","status"],"mappings":"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","file":"static/js/29.0717a283.chunk.js","sourcesContent":["import React from \"react\";\nimport { Document, Page, Text, StyleSheet } from \"@react-pdf/renderer\";\nimport {\n  Table,\n  TableHeader,\n  TableCell,\n  TableBody,\n  DataTableCell,\n} from \"@david.kucsai/react-pdf-table\";\n\nconst Invoice = ({ order }) => (\n  <Document>\n    <Page style={styles.body}>\n      <Text style={styles.header} fixed>\n        ~ {new Date().toLocaleString()} ~\n      </Text>\n      <Text style={styles.title}>Order Invoice</Text>\n      <Text style={styles.author}>Banglar Bazar</Text>\n      <Text style={styles.subtitle}>Order Summary</Text>\n\n      <Table>\n        <TableHeader>\n          <TableCell>Title</TableCell>\n          <TableCell>Price</TableCell>\n          <TableCell>Quantity</TableCell>\n          <TableCell>Brand</TableCell>\n          <TableCell>Color</TableCell>\n        </TableHeader>\n      </Table>\n\n      <Table data={order.products}>\n        <TableBody>\n          <DataTableCell getContent={(x) => x.product.title} />\n          <DataTableCell getContent={(x) => `$${x.product.price}`} />\n          <DataTableCell getContent={(x) => x.count} />\n          <DataTableCell getContent={(x) => x.product.brand} />\n          <DataTableCell getContent={(x) => x.product.color} />\n        </TableBody>\n      </Table>\n\n      <Text style={styles.text}>\n        <Text>\n          Date: {\"               \"}\n          {new Date(order.paymentIntent.created * 1000).toLocaleString()}\n        </Text>\n        {\"\\n\"}\n        <Text>\n          Order Id: {\"         \"}\n          {order.paymentIntent.id}\n        </Text>\n        {\"\\n\"}\n        <Text>\n          Order Status: {\"  \"}\n          {order.orderStatus}\n        </Text>\n        {\"\\n\"}\n        <Text>\n          Total Paid: {\"       \"}\n          {order.paymentIntent.amount}\n        </Text>\n      </Text>\n\n      <Text style={styles.footer}> ~ Thank you for shopping with us ~ </Text>\n    </Page>\n  </Document>\n);\n\nconst styles = StyleSheet.create({\n  body: {\n    paddingTop: 35,\n    paddingBottom: 65,\n    paddingHorizontal: 35,\n  },\n  title: {\n    fontSize: 24,\n    textAlign: \"center\",\n  },\n  author: {\n    fontSize: 12,\n    textAlign: \"center\",\n    marginBottom: 40,\n  },\n  subtitle: {\n    fontSize: 18,\n    margin: 12,\n  },\n  text: {\n    margin: 12,\n    fontSize: 14,\n    textAlign: \"justify\",\n  },\n  image: {\n    marginVertical: 15,\n    marginHorizontal: 100,\n  },\n  header: {\n    fontSize: 12,\n    marginBottom: 20,\n    textAlign: \"center\",\n    color: \"grey\",\n  },\n  footer: {\n    padding: \"100px\",\n    fontSize: 12,\n    marginBottom: 20,\n    textAlign: \"center\",\n    color: \"grey\",\n  },\n  pageNumber: {\n    position: \"absolute\",\n    fontSize: 12,\n    bottom: 30,\n    left: 0,\n    right: 0,\n    textAlign: \"center\",\n    color: \"grey\",\n  },\n});\n\nexport default Invoice;\n","import React, { useState, useEffect } from \"react\";\nimport UserNav from \"../../components/nav/UserNav\";\nimport { getUserOrders } from \"../../functions/user\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { CheckCircleOutlined, CloseCircleOutlined } from \"@ant-design/icons\";\nimport { toast } from \"react-toastify\";\nimport ShowPaymentInfo from \"../../components/cards/ShowPaymentInfo\";\nimport { PDFDownloadLink } from \"@react-pdf/renderer\";\nimport Invoice from \"../../components/order/Invoice\";\n\nconst History = () => {\n  const [orders, setOrders] = useState([]);\n  const { user } = useSelector((state) => ({ ...state }));\n\n  useEffect(() => {\n    loadUserOrders();\n  }, []);\n\n  const loadUserOrders = () =>\n    getUserOrders(user.token).then((res) => {\n      console.log(JSON.stringify(res.data, null, 4));\n      setOrders(res.data);\n    });\n\n  const showOrderInTable = (order) => (\n    <table className=\"table table-bordered\">\n      <thead className=\"thead-light\">\n        <tr>\n          <th scope=\"col\">Title</th>\n          <th scope=\"col\">Price</th>\n          <th scope=\"col\">Brand</th>\n          <th scope=\"col\">Color</th>\n          <th scope=\"col\">Count</th>\n          <th scope=\"col\">Shipping</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {order.products.map((p, i) => (\n          <tr key={i}>\n            <td>\n              <b>{p.product.title}</b>\n            </td>\n            <td>{p.product.price}</td>\n            <td>{p.product.brand}</td>\n            <td>{p.color}</td>\n            <td>{p.count}</td>\n            <td>\n              {p.product.shipping === \"Yes\" ? (\n                <CheckCircleOutlined style={{ color: \"green\" }} />\n              ) : (\n                <CloseCircleOutlined style={{ color: \"red\" }} />\n              )}\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n\n  const showDownloadLink = (order) => (\n    <PDFDownloadLink\n      document={<Invoice order={order} />}\n      fileName=\"invoice.pdf\"\n      className=\"btn btn-sm btn-block btn-outline-primary\"\n    >\n      Download PDF\n    </PDFDownloadLink>\n  );\n\n  const showEachOrders = () =>\n    orders.reverse().map((order, i) => (\n      <div key={i} className=\"m-5 p-3 card\">\n        <ShowPaymentInfo order={order} />\n        {showOrderInTable(order)}\n        <div className=\"row\">\n          <div className=\"col\">{showDownloadLink(order)}</div>\n        </div>\n      </div>\n    ));\n\n  return (\n    <div className=\"container-fluid\">\n      <div className=\"row\">\n        <div className=\"col-md-2\">\n          <UserNav />\n        </div>\n        <div className=\"col text-center\">\n          <h4>\n            {orders.length > 0 ? \"User purchase orders\" : \"No purchase orders\"}\n          </h4>\n          {showEachOrders()}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default History;\n","import axios from \"axios\";\n\nexport const userCart = async (cart, authtoken) =>\n  await axios.post(\n    `${process.env.REACT_APP_API}/user/cart`,\n    { cart },\n    {\n      headers: {\n        authtoken,\n      },\n    }\n  );\n\nexport const getUserCart = async (authtoken) =>\n  await axios.get(`${process.env.REACT_APP_API}/user/cart`, {\n    headers: {\n      authtoken,\n    },\n  });\n\nexport const emptyUserCart = async (authtoken) =>\n  await axios.delete(`${process.env.REACT_APP_API}/user/cart`, {\n    headers: {\n      authtoken,\n    },\n  });\n\n// const saveAddressToDb = async (e) => {\n//   e.preventDefault();\n//   console.log(\n//     \"ADDRESS INPUT FROM USER ===> \",\n//     address,\n//     city,\n//     state,\n//     postalCode,\n//     country\n//   );\n\n//   const res = await axios.post(\n//     `http://localhost:8000/api/user/address`,\n//     { address, city, state, postalCode, country },\n//     {\n//       headers: {\n//         authtoken,\n//       },\n//     }\n//   );\n// };\n\nexport const saveUserAddress = async (authtoken, address) =>\n  await axios.post(\n    `${process.env.REACT_APP_API}/user/address`,\n    { address },\n    {\n      headers: {\n        authtoken,\n      },\n    }\n  );\n\nexport const applyCoupon = async (authtoken, coupon) =>\n  await axios.post(\n    `${process.env.REACT_APP_API}/user/cart/coupon`,\n    { coupon },\n    {\n      headers: {\n        authtoken,\n      },\n    }\n  );\n\nexport const createOrder = async (stripeResponse, authtoken) =>\n  await axios.post(\n    `${process.env.REACT_APP_API}/user/order`,\n    { stripeResponse },\n    {\n      headers: {\n        authtoken,\n      },\n    }\n  );\n\nexport const getUserOrders = async (authtoken) =>\n  await axios.get(`${process.env.REACT_APP_API}/user/orders`, {\n    headers: {\n      authtoken,\n    },\n  });\n\nexport const getWishlist = async (authtoken) =>\n  await axios.get(`${process.env.REACT_APP_API}/user/wishlist`, {\n    headers: {\n      authtoken,\n    },\n  });\n\nexport const removeWishlist = async (productId, authtoken) =>\n  await axios.put(\n    `${process.env.REACT_APP_API}/user/wishlist/${productId}`,\n    {},\n    {\n      headers: {\n        authtoken,\n      },\n    }\n  );\n\nexport const addToWishlist = async (productId, authtoken) =>\n  await axios.post(\n    `${process.env.REACT_APP_API}/user/wishlist`,\n    { productId },\n    {\n      headers: {\n        authtoken,\n      },\n    }\n  );\n\nexport const createCashOrderForUser = async (\n  authtoken,\n  COD,\n  couponTrueOrFalse\n) =>\n  await axios.post(\n    `${process.env.REACT_APP_API}/user/cash-order`,\n    { couponApplied: couponTrueOrFalse, COD },\n    {\n      headers: {\n        authtoken,\n      },\n    }\n  );\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst UserNav = () => (\n  <nav>\n    <ul className=\"nav flex-column\">\n      <li className=\"nav-item\">\n        <Link to=\"/user/history\" className=\"nav-link\">\n          History\n        </Link>\n      </li>\n\n      <li className=\"nav-item\">\n        <Link to=\"/user/password\" className=\"nav-link\">\n          Password\n        </Link>\n      </li>\n\n      <li className=\"nav-item\">\n        <Link to=\"/user/wishlist\" className=\"nav-link\">\n          Wishlist\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default UserNav;\n","import React from \"react\";\n\nconst ShowPaymentInfo = ({ order, showStatus = true }) => (\n  <div>\n    <p>\n      <span>Order Id: {order.paymentIntent.id}</span>\n      {\" / \"}\n      <span>\n        Amount:{\" / \"}\n        {(order.paymentIntent.amount /= 100).toLocaleString(\"en-US\", {\n          style: \"currency\",\n          currency: \"USD\",\n        })}\n      </span>\n      {\" / \"}\n      <span>Currency: {order.paymentIntent.currency.toUpperCase()}</span>\n      {\" / \"}\n      <span>Method: {order.paymentIntent.payment_method_types[0]}</span>\n      {\" / \"}\n      <span>Payment: {order.paymentIntent.status.toUpperCase()}</span>\n      {\" / \"}\n      <span>\n        Orderd on:{\" / \"}\n        {new Date(order.paymentIntent.created * 1000).toLocaleString()}\n      </span>\n      {\" / \"}\n      <br />\n      {showStatus && (\n        <span className=\"badge bg-primary text-white\">\n          STATUS: {order.orderStatus}\n        </span>\n      )}\n    </p>\n  </div>\n);\n\nexport default ShowPaymentInfo;\n"],"sourceRoot":""}